{% extends "::base.html.twig" %}

{% block stylesheets %}
{{ parent() }}
<style>
    ul.technology {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-around;
    }

    ul.technology > li {
        display: inline-block;
        flex-grow: 0;
        width: calc(25% - 1em);
        list-style: none;
        margin-left: 0.5em;
        text-align: center;
    }

    ul.technology > li > div  {
        height: 5rem;
        vertical-align: middle;
        overflow: hidden;
        margin: 0.25em 1em 0.25em 0;
        text-align: center;
    }

    ul.technology > li > div > img {
        max-height: 5rem;
        max-width: calc(100% - 1em);;
    }

    @media (max-width: 767px) {
        ul.technology > li {
            width: calc(100% - 1em);
        }
    }

</style>
{% endblock %}

{% block body %}
<article>
    <p>
        Webová aplikace <a href="{{ path('net_tomaskadlec_d2s_default_index') }}">Obědář</a> vznikla jako pomůcka pro
        rozhodování kam v Praze 6 Dejvicích vyrazit na oběd. Jelikož se jedná v řadě ohledů o velmi jednoduchou aplikaci,
        zkoušíme si na ní nové postupy a bylo by škoda ji nevyužít i pro jejich demonstraci. V následujících odstavcích
        jsme se proto rozhodli alespoň zjednodušeně ukázat, jak na aplikaci nahlížejí různí aktéři:
        <ul>
            <li>uživatel, který chce jít na oběd,</li>
            <li>vývojář, který chce doplnit do aplikace další funkcionalitu,</li>
            <li>systémový administrátor (sysadmin), který musí připravit infrastrukturu pro provoz aplikace,</li>
            <li>architekt aplikace, když se nasazuje nová verze aplikace.</li>
        </ul>
    </p>

    <h2>Jak vidí aplikaci uživatel?</h2>

    <p>
        Pro uživatele je důležité, že se dozví, jaké menu mají restaurace v jeho okolí. Použité postupy, technologie i
        infrastruktura jsou mu skryty a věšinou jej nezajímají.
    </p>

    <p>
        <img src="{{ asset('images/user.png') }}" alt="Jak to vidí uživatel"/>
    </p>

    <h2>Jak vývojář přidá novou funkcionalitu?</h2>

    <p>
        Vývojář se musí orientovat v použitých technologiích a v aplikaci jako takové, musí umět používat VCS git. Další
        požadavky se na něj však nekladou. O postupu nasazení nové verze nejpíš nebude mít žádnou představu.
    </p>

    <p>
        <img src="{{ asset('images/developer.png') }}" alt="Jak to vidí vývojář"/>
    </p>

    <h2>Jak to vidí sysadmin?</h2>

    <p>
        Sysadmin je mírně řečeno zděšen. Postupy jsou odlišné od těch <em>standardních</em>, na které je zvyklý. Aby se do
        provozu nasadila jednoduchá aplikace, musí se provést řada kroků a musí spolu spolupracovat celá řada zařízení.
        Je nutná automatická konfigurace. Bohužel řada zařízení automatickou konfiguraci nepodporuje a je nutné hledat
        nové postupy a nástroje. Nakonec se to ale podaří!
    </p>

    <p>
        <img src="{{ asset('images/sysadmin.png') }}" alt="Jak to vidí sysadmin"/>
    </p>

    <h2>Jak to vidí architekt?</h2>

    <p>
        Architekt musí vidět systém jako celek. To se na jeden obrázek nevejde. Proto na tom dalším je jen postup, co
        všechno se musí stát, aby se nasadila nová verze aplikace.
    </p>

    <p>
        <img src="{{ asset('images/architect.png') }}" alt="Jak to vidí architekt - nasazení nové verze aplikace"/>
    </p>

    <h2>Použité technologie</h2>

    <p>
        Aplikace využívá celou řadu technologií, pro představu uvádíme alespoň stručný seznam:
        <ul class="technology">
            <li>
                <div><img src="https://git-scm.com/images/logos/downloads/Git-Logo-2Color.png" alt="git - logo"/></div>
                git <em>version control system</em> používáme pro verzování zdrojového kódu aplikace i skriptů pro
                nasazení aplikace.
            </li>
            <li>
                <div><img src="http://php.net/images/logos/php-med-trans.png" alt="PHP - logo"/></div>
                Aplikace je napsaná v jazyce PHP.
            </li>
            <li>
                <div><img src="http://symfony.com/logos/symfony_black_02.png?v=4" alt="Symfony - logo"/></div>
                Symfony - psát aplikaci bez frameworku je jako stavět na zelené louce - všechno by se muselo postavit
                úplně od začástku.
            </li>
            <li>
                <div><img src="https://upload.wikimedia.org/wikipedia/en/thumb/9/9e/JQuery_logo.svg/1280px-JQuery_logo.svg.png" alt="jQuery - logo"/></div>
                jQuery - jelikož totéž platí i pro frontend aplikace, pro skriptování ve vašem prohlížeči využíváme
                tuto knihovnu.
            </li>
            <li>
                <div><img src="https://getcomposer.org/img/logo-composer-transparent.png" alt="Composer - logo"/></div>
                Composer - pomocník, který najde všechny závislosti aplikace.
            </li>
            <li>
                <div><img src="http://www.ansible.com/hubfs/Official_Logos/Ansible-CircleA-BlackOutline.png?t=1455052074093" alt="Ansible - logo"/></div>
                Ansible - slouží k automatizaci IT. My jím řídíme sestavení aplikace, vytvoření image pro Docker
                i nasazení na server. Používáme jej i k přípravě serverů, na kterých aplikaci sestavujeme.
            </li>
            <li>
                <div><img src="https://www.docker.com/sites/default/files/legal/small_h.png" alt="Docker - logo"/></div>
                Docker - aplikaci distribuujeme zabalenou se vším, co potřebuje k běhu. Spouštíme ji jako kontejner. Tedy
                používáme Docker.
            </li>
            <li>
                <div><img src="https://assets-cdn.github.com/images/modules/logos_page/GitHub-Logo.png" alt="GitHub - logo"/></div>
                GitHub - veřejně dostupný git repozitář, který vyžíváme k uložení zdrojových kódů aplikace.
            </li>
            <li>
                <div><img src="https://gitlab.com/gitlab-com/gitlab-artwork/raw/master/wordmark/wm_no_bg.png" alt="Gitlab - logo"/></div>
                Gitlab, Gitlab CI - využíváme naše interní servery s git repozitáři a CI (continuous integration)
                k automatickému sestavení a nasazení aplikace.
            </li>
        </ul>
    </p>

</article>
{% endblock %}